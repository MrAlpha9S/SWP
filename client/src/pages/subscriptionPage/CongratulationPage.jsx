import {useNavigate} from "react-router-dom";
import {useCurrentStepStore} from "../../stores/store.js";

const CongratulationPage = ({subscriptionData, from, hasCoach}) => {
    const {setCurrentStep} = useCurrentStepStore()
    const navigate = useNavigate();
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const months = [
            'th√°ng 1', 'th√°ng 2', 'th√°ng 3', 'th√°ng 4', 'th√°ng 5', 'th√°ng 6',
            'th√°ng 7', 'th√°ng 8', 'th√°ng 9', 'th√°ng 10', 'th√°ng 11', 'th√°ng 12'
        ];
        return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()}`;
    };

    const CheckIcon = () => (
        <svg className="w-16 h-16 text-emerald-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7"/>
        </svg>
    );

    const SparkleIcon = ({className}) => (
        <svg className={className} fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0L14.59 8.41L23 11L14.59 13.59L12 22L9.41 13.59L1 11L9.41 8.41L12 0Z"/>
        </svg>
    );

    return (

        <div className="relative z-10 max-w-2xl w-full">
            <div className="bg-white/80 p-8 md:p-12 text-center animate-fade-in">
                <div className="flex justify-center mb-6">
                    <div className="relative">
                        <div
                            className="w-20 h-20 bg-emerald-100 rounded-full flex items-center justify-center animate-pulse-slow">
                            <CheckIcon/>
                        </div>
                        <div className="absolute -top-2 -right-2">
                            <SparkleIcon className="w-6 h-6 text-yellow-400 animate-bounce-slow"/>
                        </div>
                    </div>
                </div>

                <h1 className="text-4xl md:text-5xl font-bold text-gray-800 mb-4 animate-slide-up">
                    Ch√∫c m·ª´ng! üéâ
                </h1>
                <p className="text-xl md:text-2xl text-gray-600 mb-8 animate-slide-up">
                    G√≥i ƒëƒÉng k√Ω c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t
                </p>

                <div className="bg-emerald-50 border border-emerald-200 rounded-2xl p-6 mb-8 animate-slide-up">
                    <h2 className="text-lg font-semibold text-emerald-800 mb-2">Thanh to√°n th√†nh c√¥ng ‚úì</h2>
                    <p className="text-emerald-700">
                        Ch√∫c m·ª´ng b·∫°n ƒë√£ tr·ªü th√†nh th√†nh vi√™n Premium! G√≥i ƒëƒÉng k√Ω c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng v√†
                        b·∫°n hi·ªán c√≥ quy·ªÅn truy c·∫≠p v√†o t·∫•t c·∫£ c√°c t√≠nh nƒÉng cao c·∫•p.
                    </p>
                </div>

                <div className="bg-gray-50 rounded-2xl p-6 mb-8 animate-slide-up">
                    <h3 className="text-lg font-semibold text-gray-800 mb-4">Chi ti·∫øt ƒëƒÉng k√Ω</h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-left">
                        <div className="flex justify-between">
                            <span className="text-gray-600">G√≥i:</span>
                            <span className="font-medium text-gray-800">{subscriptionData?.sub_name}</span>
                        </div>
                        <div className="flex justify-between">
                            <span className="text-gray-600">Thanh to√°n ti·∫øp theo:</span>
                            <span className="font-medium text-gray-800">
                                    {formatDate(subscriptionData?.vip_end_date)}
                                </span>
                        </div>
                        <div className="flex justify-between">
                            <span className="text-gray-600">S·ªë ti·ªÅn:</span>
                            <span className="font-medium text-gray-800">
                                    {subscriptionData?.price.toLocaleString('vi-VN')} VNƒê
                                </span>
                        </div>
                        <div className="flex justify-between">
                            <span className="text-gray-600">Tr·∫°ng th√°i:</span>
                            <span className="font-medium text-emerald-600">ƒêang ho·∫°t ƒë·ªông</span>
                        </div>
                    </div>
                </div>

                <div className="text-left mb-8 animate-slide-up">
                    <h3 className="text-lg font-semibold text-gray-800 mb-4">Ti·∫øp theo l√† g√¨?</h3>
                    <div className="space-y-3">
                        {[
                            'Ch·ªçn Hu·∫•n luy·ªán vi√™n - ng∆∞·ªùi s·∫Ω ƒë·ªìng h√†nh c√πng b·∫°n',
                            'T·∫°o k·∫ø ho·∫°ch cai thu·ªëc v·ªõi ch·ª©c nƒÉng t·∫°o k·∫ø ho·∫°ch b·ªüi h·ªá th·ªëng',
                            'Ho·∫∑c, tr√≤ chuy·ªán v·ªõi Hu·∫•n luy·ªán vi√™n c·ªßa ch√∫ng t√¥i ƒë·ªÉ c√πng t·∫°o k·∫ø ho·∫°ch cai thu·ªëc cho ri√™ng b·∫°n.'
                        ].map((item, idx) => (
                            <div key={idx} className="flex items-start space-x-3">
                                <div className="w-2 h-2 bg-emerald-500 rounded-full mt-2 flex-shrink-0"></div>
                                <p className="text-gray-600">{item}</p>
                            </div>
                        ))}
                    </div>
                </div>

                <div className="flex flex-col sm:flex-row gap-4 justify-center animate-slide-up">
                    {!hasCoach && <>
                        <button
                            onClick={() => {
                                if (from === 'onboarding-step-5-payment') {
                                    setCurrentStep(5)
                                    navigate('/coach-selection/onboarding-step-5-payment')
                                } else if (from === 'coach-dashboard') {
                                    navigate('/coach-selection')
                                } else if (!from) {
                                    navigate('/coach-selection')

                                }
                            }}
                            className="bg-gradient-to-r from-emerald-500 to-emerald-600 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:from-emerald-600 hover:to-emerald-700 transform hover:scale-105 transition-all duration-200">
                            Ch·ªçn HLV
                        </button>
                        <button
                            onClick={() => {
                                if (from === 'onboarding-step-5-payment') {
                                    setCurrentStep(5)
                                }
                                navigate('/onboarding/onboarding-step-5-payment')
                            }
                            }
                            className="bg-gradient-to-r from-emerald-500 to-emerald-600 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:from-emerald-600 hover:to-emerald-700 transform hover:scale-105 transition-all duration-200">
                            {from === 'onboarding-step-5-payment' ? 'Ti·∫øp t·ª•c l√™n k·∫ø ho·∫°ch' : 'B·∫Øt ƒë·∫ßu l√™n k·∫ø ho·∫°ch'}
                        </button>
                    </>}
                    {/*<button className="bg-white text-gray-700 px-8 py-3 rounded-xl font-semibold border-2 border-gray-200 hover:border-gray-300 hover:bg-gray-50 transform hover:scale-105 transition-all duration-200">*/}
                    {/*    Xem b·∫£ng ƒëi·ªÅu khi·ªÉn*/}
                    {/*</button>*/}
                    {hasCoach && <button
                        onClick={() => {
                            navigate('/dashboard')
                        }
                        }
                        className="bg-gradient-to-r from-emerald-500 to-emerald-600 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:from-emerald-600 hover:to-emerald-700 transform hover:scale-105 transition-all duration-200">
                        Ti·∫øp t·ª•c ƒë·∫øn B·∫£ng ƒëi·ªÅu khi·ªÉn
                    </button>}
                </div>

                <div className="mt-8 text-center animate-slide-up">
                    <p className="text-gray-500 text-sm mb-2">C·∫ßn h·ªó tr·ª£ ƒë·ªÉ b·∫Øt ƒë·∫ßu?</p>
                    <p className="text-gray-500 text-sm mb-2 font-medium">
                        H√£y nh·∫•n b·∫Øt ƒë·∫ßu ƒë·ªÉ ch·ªçn Hu·∫•n luy·ªán vi√™n c·ªßa ch√∫ng t√¥i. Sau ƒë√≥ h√£y chat tr·ª±c ti·∫øp v·ªõi h·ªç ƒë·ªÉ nh·∫≠n
                        s·ª± gi√∫p ƒë·ª°.
                    </p>
                </div>
            </div>

            <div className="text-center mt-6 animate-fade-in">
                <p className="text-gray-500 text-sm">
                    Email x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn ƒë·ªãa ch·ªâ email ƒë√£ ƒëƒÉng k√Ω c·ªßa b·∫°n.
                </p>
            </div>
        </div>
    );
};

export default CongratulationPage;
